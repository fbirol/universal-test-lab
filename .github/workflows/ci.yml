name: Universal Test Lab CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright browsers
        run: playwright install

      - name: Install Allure (report publishing tool)
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jre
          wget https://github.com/allure-framework/allure2/releases/download/2.28.0/allure-2.28.0.tgz
          tar -zxvf allure-2.28.0.tgz
          sudo mv allure-2.28.0 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure

      - name: Check code style (Black)
        run: black --check .

      - name: Check import order (isort)
        run: isort --check .

      - name: Check code lint (Flake8)
        run: flake8 .

      - name: Start Flask server in background (for performance tests)
        run: |
          cd app
          nohup python main.py &
          cd ..
          sleep 6

      - name: Run Locust load test and HTML report
        run: |
          pip install locust faker
          locust -f locustfile.py --host=http://127.0.0.1:5000 --headless -u 8 -r 2 -t30s --html locust-report.html --csv locust-result

      - name: Upload Locust HTML report
        uses: actions/upload-artifact@v4
        with:
          name: locust-report
          path: locust-report.html

      - name: Validate Locust test threshold (max 5 failures allowed)
        run: |
          FAILS=$(cat locust-result_stats.csv | grep Aggregated | awk -F',' '{print $5}')
          if (( FAILS > 50 )); then
              echo "::error ::Too many failures ($FAILS) during load test"
              exit 1
          fi

      - name: Stop Flask server (for performance tests)
        run: pkill -f 'python main.py'
        
      - name: Run all tests and generate Allure results
        run: pytest --alluredir=allure-results

      - name: Generate Allure HTML Report
        run: allure generate --clean allure-results -o allure-report

      - name: Upload Allure report artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report
      
      - name: Prepare deploy directory for GitHub Pages
        run: |
          mkdir -p site-build
          cp -r allure-report site-build/
          cp locust-report.html site-build/
          cp index.html site-build/     

      - name: Deploy all QA reports to GitHub Pages ðŸš€
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./site-build